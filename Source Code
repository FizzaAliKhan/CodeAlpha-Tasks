# Import necessary libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report

# Load the iris dataset from a CSV file (Assuming you have a CSV file)
# You can download it from: https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data
# The dataset doesn't come with headers, so we'll specify them
url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data'
columns = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'species']

# Load the data into a DataFrame
df = pd.read_csv(url, header=None, names=columns)

# Convert species from text to numerical values
df['species'] = df['species'].astype('category').cat.codes

# Define features (X) and labels (y)
X = df.drop('species', axis=1).values
y = df['species'].values

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Initialize the Decision Tree Classifier
clf = DecisionTreeClassifier()

# Train the model on the training data
clf.fit(X_train, y_train)

# Make predictions on the test data
y_pred = clf.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred, target_names=['setosa', 'versicolor', 'virginica'])

# Print the accuracy and classification report
print(f"Accuracy: {accuracy * 100:.2f}%")
print("\nClassification Report:\n", report)
